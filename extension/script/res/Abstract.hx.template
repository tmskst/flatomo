package ;
import ::SUPER_CLASS_NAME::;

::if (SUPER_CLASS_NAME == "flatomo.display.Container")::
private typedef FTextField = starling.text.TextField;
::end::

@:access(::SUPER_CLASS_NAME::)
abstract ::CLASS_NAME::(::SUPER_CLASS_NAME::) to ::SUPER_CLASS_NAME:: {
	
	public function new(content:::SUPER_CLASS_NAME::) {
		this = content;
	}
	
	public var x(get, set):Float;
	private function get_x():Float {
		return this.x;
	}
	
	private function set_x(value:Float):Float {
		this.layoutPropertiesOverwrited = true;
		return this.x = value;
	}
	
	public var y(get, set):Float;
	private function get_y():Float {
		return this.y;
	}
	
	private function set_y(value:Float):Float {
		this.layoutPropertiesOverwrited = true;
		return this.y = value;
	}
	
	public var rotation(get, set):Float;
	private function get_rotation():Float {
		return this.rotation;
	}
	
	private function set_rotation(value:Float):Float {
		this.layoutPropertiesOverwrited = true;
		return this.rotation = value;
	}
	
	public var scaleX(get, set):Float;
	private function get_scaleX():Float {
		return this.scaleX;
	}
	
	private function set_scaleX(value:Float):Float {
		this.layoutPropertiesOverwrited = true;
		return this.scaleX = value;
	}
	
	public var scaleY(get, set):Float;
	private function get_scaleY():Float {
		return this.scaleY;
	}
	
	private function set_scaleY(value:Float):Float {
		this.layoutPropertiesOverwrited = true;
		return this.scaleY = value;
	}
	
	public var visible(get, set):Bool;
	private function get_visible():Bool {
		return this.visible;
	}
	
	private function set_visible(value:Bool):Bool {
		this.visiblePropertyOverwrited = true;
		return this.visible = value;
	}
	
	public function gotoAndPlay(section:::CLASS_NAME::SectionName, ?increment:Int = 0):Void {
		this.playhead.gotoAndPlay(untyped section, increment);
	}
	
	public function gotoAndStop(section:::CLASS_NAME::SectionName, ?increment:Int = 0):Void {
		this.playhead.gotoAndStop(untyped section, increment);
	}
	
	public var ::API_NAME::(get, never):::SUPER_CLASS_NAME::;
	private function get_::API_NAME::():::SUPER_CLASS_NAME:: {
		return cast this;
	}
	
	::if (SUPER_CLASS_NAME == "flatomo.display.Container")::
	::foreach FIELDS::
	public var ::NAME::(get, never):::CLASS_NAME::;
	private function get_::NAME::():::CLASS_NAME:: {
		return untyped this.getChildByName("::NAME::");
	}
	::end::
	::end::
}

@:enum abstract ::CLASS_NAME::SectionName(String) {
	::foreach SECTIONS::
	var ::NAME:: = "::NAME::";
	::end::
}
